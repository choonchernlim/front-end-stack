// noinspection NpmUsedModulesInstalled
/**
 * `yarn run ci`
 *
 * Cross-platform script to generate test result file and coverage result file for CI.
 */
const process = require('process');
const path = require('path');
const script = require('./script');

const mochaOpts = script.mochaOpts;
const reportDirPath = process.env.npm_package_config_report_dir_path;
const testDirPath = process.env.npm_package_config_test_dir_path;
const distDirPath = process.env.npm_package_config_dist_dir_path;
const srcDirPath = process.env.npm_package_config_src_dir_path;
const mochaFilePath = path.join(reportDirPath, 'test-results.xml');

process.env.NODE_ENV = 'test';

const flow = 'flow --color always';
const eslint = `eslint ${srcDirPath} ${testDirPath} --color`;

// In addition to the `exclude` patterns defined in package.json, add user defined paths.
// Most importantly, `distDirPath` has to be excluded because it contains large bundled JS files
// and it causes "JavaScript heap out of memory" error.
const nycExtraExcludes = [
  distDirPath,
  reportDirPath,
  '**/__tests__/',
  'node/',
  'node_modules/',
  'scripts/',
].map(pattern => `--exclude=${pattern}`)
  .join(' ');

const nyc = `nyc ${nycExtraExcludes} --include=${srcDirPath} --report-dir=${reportDirPath}`;
const mocha = `node_modules/mocha/bin/_mocha ${testDirPath} ${mochaOpts} --reporter mocha-junit-reporter --reporter-options mochaFile=${mochaFilePath} --colors`;

const removeReportDir = `rimraf ${reportDirPath}`;
const removeNycOutputDir = 'rimraf .nyc_output/';

script.run(`${removeReportDir} && ${flow} && ${eslint} && ${nyc} ${mocha} && ${removeNycOutputDir}`,
  [
    `Rimraf   : Remove ${reportDirPath}`,
    'Flow     : Static type check',
    'ESLint   : Code linting',
    'Mocha    : Run tests and create JUnit report file',
    'Istanbul : Run code coverage and create HTML and Cobertura report files',
    'Rimraf   : Remove .nyc_output/ generated by Istanbul',
  ]);
